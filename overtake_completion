#!/bin/bash

# _pass_complete_entries and _pass_complete_folders are copied from https://git.zx2c4.com/password-store/tree/src/completion/pass.bash-completion


_pass_complete_entries () {
  local prefix="${PASSWORD_STORE_DIR:-$HOME/.password-store/}"
  prefix="${prefix%/}/"
  local suffix=".gpg"
  local autoexpand=${1:-0}

  local IFS=$'\n'
  local items=($(compgen -f $prefix$cur))

  # Remember the value of the first item, to see if it is a directory. If
  # it is a directory, then don't add a space to the completion
  local firstitem=""
  # Use counter, can't use ${#items[@]} as we skip hidden directories
  local i=0 item

  for item in ${items[@]}; do
    [[ $item =~ /\.[^/]*$ ]] && continue

    # if there is a unique match, and it is a directory with one entry
    # autocomplete the subentry as well (recursively)
    if [[ ${#items[@]} -eq 1 && $autoexpand -eq 1 ]]; then
      while [[ -d $item ]]; do
        local subitems=($(compgen -f "$item/"))
        local filtereditems=( ) item2
        for item2 in "${subitems[@]}"; do
          [[ $item2 =~ /\.[^/]*$ ]] && continue
          filtereditems+=( "$item2" )
        done
        if [[ ${#filtereditems[@]} -eq 1 ]]; then
          item="${filtereditems[0]}"
        else
          break
        fi
      done
    fi

    # append / to directories
    [[ -d $item ]] && item="$item/"

    item="${item%$suffix}"
    COMPREPLY+=("${item#$prefix}")
    if [[ $i -eq 0 ]]; then
      firstitem=$item
    fi
    let i+=1
  done

  # The only time we want to add a space to the end is if there is only
  # one match, and it is not a directory
  if [[ $i -gt 1 || ( $i -eq 1 && -d $firstitem ) ]]; then
    compopt -o nospace
  fi
}

_pass_complete_folders () {
  local prefix="${PASSWORD_STORE_DIR:-$HOME/.password-store/}"
  prefix="${prefix%/}/"
  local IFS=$'\n'
  local items=($(compgen -d $prefix$cur))

  compopt -o nospace

  for item in ${items[@]}; do
    [[ $item == $prefix.* ]] && continue
    COMPREPLY+=("${item#$prefix}/")
  done
}

command -v overtake &> /dev/null &&
_overtake_complete()
{
  local cur prev

  COMPREPLY=()
  cur=${COMP_WORDS[COMP_CWORD]}
  prev=${COMP_WORDS[COMP_CWORD-1]}

  if [ $COMP_CWORD -eq 1 ]; then
    COMPREPLY=( $(compgen -W "add copy delete edit help list show" -- $cur) )
  elif [ $COMP_CWORD -eq 2 ]; then
    case "$prev" in
      add)
        # Only complete directories
        #_filedir -d

        # Only do completion if a relative path (not starting with /)
        [ "${cur:0:1}" != '/' ] && _pass_complete_folders
        ;;
      copy|delete|edit|show)
        # Complete *.gpg file paths
        #_filedir gpg

        # Only do completion if a relative path (not starting with /)
        [ "${cur:0:1}" != '/' ] && _pass_complete_entries
        ;;
      list)
        COMPREPLY=( $(compgen -W "--full --tree" -- $cur) )
        ;;
    esac
  fi

} &&
complete -F _overtake_complete overtake

