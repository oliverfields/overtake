#!/bin/bash

# https://stackoverflow.com/questions/1146098/properly-handling-spaces-and-quotes-in-bash-completion
_overtake_complete_entries ()
{
  local IFS=$'\n'
  local prefix="${PASSWORD_STORE_DIR:-$HOME/.password-store/}"
  prefix="${prefix%/}/"
  #local cur="${COMP_WORDS[2]}"
  local cur=${COMP_WORDS[COMP_CWORD]}
  local items=($(compgen -f $prefix$cur))

  for item in "${items[@]}"; do

    local name="${item#$prefix}"
    #name="${item##*/}"
    name="${name%.gpg}"

    # Skip hidden files
    [ "${name:0:1}" = "." ] && continue

    if [ -d "$item" ]; then
      COMPREPLY+=($(printf '%q\n' "$name/"))
    else
      COMPREPLY+=($(printf '%q \n' "$name"))
    fi
  done
}


command -v overtake &> /dev/null &&
_overtake_complete()
{
  local cur prev

  COMPREPLY=()
  cur=${COMP_WORDS[COMP_CWORD]}
  prev=${COMP_WORDS[COMP_CWORD-1]}

  if [ $COMP_CWORD -eq 1 ]; then
    COMPREPLY=( $(compgen -W "add copy delete edit help list show" -- $cur) )
  elif [ $COMP_CWORD -eq 2 ]; then
    case "$prev" in
      add)
        # Only complete directories
        #_filedir -d

        # Only do completion if a relative path (not starting with /)
        [ "${cur:0:1}" != '/' ] && _pass_complete_folders
        ;;
      copy|delete|edit|show)
        # Complete *.gpg file paths
        compopt -o nospace
        _overtake_complete_entries
        ;;
      list)
        COMPREPLY=( $(compgen -W "--full --tree" -- $cur) )
        ;;
    esac
  fi

} &&
complete -F _overtake_complete overtake

