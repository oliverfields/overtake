#!/bin/bash



_overtake_complete_entries () {
  # Need to know where password store is, check for environment variable, else load from config
  [ "$PASSWORD_STORE_DIR" ] || eval "$(grep '^PASSWORD_STORE_DIR=' "$HOME/.config/overtake.conf" | sed 's/^/export /')"

  # Always end prefix with a /
  local prefix="${PASSWORD_STORE_DIR%/}/"
  local cur="$1"

  # cur can either be a directory (e.g. 'bla/' or 'bla') or a partial path 'bl'
#dir1/dir1-1/d <- Not a directory, so list items in password store/dir1/dir1-1/
#dir <- Not a directory, so list items in password store/
#dir1/ <- Is a directory, so list items in it

  if [ "$cur" = "" ]; then
    search_path="$prefix"
  # If prefix/current is a directory, then return files and directories from it
  elif [ -d "$prefix/$cur" ]; then
    search_path="$prefix${cur%/}/"
  # If cur contains a /, remove everything after slash (should be a directory) and return files and directories from prefix/cur with string from last / stripped
  elif [[ "$cur" =~ .*"/".* ]]; then
    search_path="$prefix${cur%/*}"
  # list contents of prefix with everything after last / stripped
  # cur contains no slash
  else
    search_path="$prefix"
  fi

  echo $search_path
  for item in ls "$search_path"; do
    echo $item
  done
}


command -v overtake &> /dev/null &&
_overtake_complete()
{
  local cur prev

  COMPREPLY=()
  cur=${COMP_WORDS[COMP_CWORD]}
  prev=${COMP_WORDS[COMP_CWORD-1]}

  if [ $COMP_CWORD -eq 1 ]; then
    COMPREPLY=( $(compgen -W "add copy delete edit help list show" -- $cur) )
  elif [ $COMP_CWORD -eq 2 ]; then
    case "$prev" in
      add)
        # Only complete directories
        #_filedir -d

        # Only do completion if a relative path (not starting with /)
        [ "${cur:0:1}" != '/' ] && _pass_complete_folders
        ;;
      copy|delete|edit|show)
        # Complete *.gpg file paths
        #_filedir gpg

        # Only do completion if a relative path (not starting with /)
        if [ "${cur:0:1}" = '/' ]; then
          _filedir
        else
          COMPREPLY=( $(_overtake_complete_entries "$cur") )
        fi
        ;;
      list)
        COMPREPLY=( $(compgen -W "--full --tree" -- $cur) )
        ;;
    esac
  fi

} &&
complete -F _overtake_complete overtake

