# Where are the encrypted files?
PASSWORD_STORE_DIR=$HOME/.password-store
# GPG key id
PASSWORD_STORE_KEY=your@gpg.key
# If yes then add, edit and delete operations will trigger a git commit and push
#SYNC_GIT=yes


# Override default behaviour When content is decrypted and sent to clipboard
# Decrypted content is sent on stdin to function
#OVERTAKE_EXT_clipboard()
#{
#  xclip --selection clipboard
#}


# Template to prepopulate with when adding new file
#OVERTAKE_EXT_template()
#{
#  echo "username=\npassword=$(tr -dc A-Za-z0-9 </dev/urandom | head -c 13)"
#}


# Define this function to use another editor than vi. It will be called in one of two contexts:
#
# 1. When adding a new file to the password store
#    Unencrypted stdin > OVERTAKE_EXT_edit_encrypted_file $FILE
#
# 2. When editing an existing file in the password store
#    OVERTAKE_EXT_edit_encrypted_file $FILE
#
# The function needs to allow user to edit content (either from stdin if add or decrypt existing file if edit). Content must be encrypted and written to $FILE in password_store. FILE is absolute path.
# OVERTAKE_EXT_edit_encrypted_file()
#{
#
#}
