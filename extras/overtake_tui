#!/bin/bash


select_directory_option() {
  local selected_dir="$1"
  local options=()
  local files=()
  local directories=()
  local back_dir=${selected_dir%/*}

  # Can't go further up than password store
  if [ "$back_dir" = "${PASSWORD_STORE_DIR%/*}" ]; then
    back_dir=""
  elif [ "$selected_dir" = "" ]; then
    selected_dir="$PASSWORD_STORE_DIR"
  else
    options+=("${lime}BACK${end}	DIRECTORY:$back_dir")
  fi

  options+=("${lime}NEW DIRECTORY${end}	DIRECTORY_NEW:$selected_dir")
  options+=("${lime}NEW SECRET${end}	SECRET_NEW:$selected_dir")
  options+=("${lime}RENAME DIRECTORY${end}	DIRECTORY_RENAME:$selected_dir")
  options+=("${lime}QUIT${end}	QUIT")

  # List directories
  for item in $(echo $selected_dir/*); do

    # Skip root dir
    [ "$item" = "$PASSWORD_STORE_DIR" ] && continue

    if [ -f "$item" ]; then
      [ "${item##*.}" = "gpg" ] || continue
      name="${item#$selected_dir/}"
      name="${name%.gpg}"
      files+=("$name	SECRET:$item")
    elif [ -d "$item" ]; then
      name="${item#$selected_dir/}/"
      directories+=("$blue$name$end	DIRECTORY:$item")
    fi
  done

  if [ "$selected_dir" = "$PASSWORD_STORE_DIR" ]; then
    info_text="Password store: $PASSWORD_STORE_DIR"
  else
    info_text="Directory: ${selected_dir#$PASSWORD_STORE_DIR/}"
  fi

  {
    printf '%s\n' "${options[@]}"
    [ ${#directories} -gt 0 ] && printf '%s\n' "${directories[@]}"
    [ ${#files} -gt 0 ] && printf '%s\n' "${files[@]}"
  } | select_option "$info_text" "$back_dir"
}


select_secret_option() {
  local selected_secret="$1"
  local options=()
  local back_dir=${selected_secret%/*}
  local info_text=${selected_secret#$PASSWORD_STORE_DIR/}
  info_text="Secret: ${info_text%.gpg}"

  # Can't go further up than password store
  if [ "$back_dir" = "${PASSWORD_STORE_DIR%/*}" ]; then
    back_dir=""
  else
    options+=("${lime}BACK$end	DIRECTORY:$back_dir")
  fi

  options+=("${lime}COPY$end	SECRET_COPY:$selected_secret")
  options+=("${lime}SHOW$end	SECRET_SHOW:$selected_secret")
  options+=("${lime}EDIT$end	SECRET_EDIT:$selected_secret")
  options+=("${lime}RENAME$end	SECRET_RENAME:$selected_secret")
  options+=("${lime}MOVE$end	SECRET_MOVE:$selected_secret")
  options+=("${lime}DELETE$end	SECRET_DELETE:$selected_secret")
  options+=("${lime}QUIT$end	QUIT")

  printf '%s\n' "${options[@]}" | select_option "$info_text" "$back_dir"
}


select_option() {
  local info_text="$1"
  local back_dir="$2"

  fzf --ansi --delimiter '	' --with-nth 1 --bind 'enter:execute(echo {2})+abort' --bind 'right:execute(echo {2})+abort' --bind "left:execute(echo DIRECTORY:$back_dir)+abort" "--header=$info_text" --no-sort --tac
}


PASSWORD_STORE_DIR="$HOME/.password-store"
selected_option="DIRECTORY:${PASSWORD_STORE_DIR%/}"

export OVERTAKE_SYNC_GIT=no

blue=$'\e[0;34;40m'
lime=$'\e[0;32;40m'
end=$'\e[0m'

while true; do

  action="${selected_option%%:*}"
  item="${selected_option#$action:}"
  name="${item#$PASSWORD_STORE_DIR/}"
  name="${name%.gpg}"

  case $action in
    QUIT) exit 0 ;;
    DIRECTORY) selected_option="$(select_directory_option "$item")" ;;
    SECRET) selected_option="$(select_secret_option "$item")" ;;
    SECRET_COPY)
      overtake show -n "$item"
      read -p "Copied $name secret to clipboard, press any key to continue.." -r x
      selected_option="SECRET:${item#$PASSWORD_STORE_DIR/}"
    ;;
    *) echo "Unknown action $action, aborting.."; exit 1 ;;
  esac

  echo $selected_option

  [ "$selected_option" = "" ] && break
done

